0000 add rd ra rb (add)
0001 sub rd ra rb (subtract)
0010 sll rd ra rb (shift left logical)
0011 srl rd ra rb (shift right logical)
0100 and rd ra rb (and)
0101 nand rd ra rb (or)
0110 or rd ra rb (xor)
0111 xor rd ra rb (nand)

1000 lw rd ra os (load word)
1001 sw rs ra os (store word)
1010 addi rd imm imm (add immediate)
1011 lui rd imm imm (load upper immediate)
1100 math op ra rb (math operation on ra and rb, store in i0 and i1 intermediate registers)
1101 int code (interrupt)
1110 jmp imm imm 0 cond (jump conditional, bits = lt, eq, gt)
1110 sint rd 0000 1 int (store intermediate)
1111 fpt op ra rb (floating point)

math:
0000: mul (multiply upper bits into i0, lower bits into i1)
0001: div (divide remainder into i0, quotient into i1)

int:

fpt: